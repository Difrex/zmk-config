/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R               &kp T           &kp Y           &kp U        &kp I      &kp O    &kp P     &kp BSPC
&lt 3 TAB  &kp A  &kp S  &kp D      &kp F               &kp G           &kp H           &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&mo 1      &kp Z  &kp X  &kp C      &kp V               &kp B           &kp N           &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                         &kp LCTRL  &mt LEFT_ALT SPACE  &kp LEFT_GUI    &kp LEFT_SHIFT  &lt 2 ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7              &kp N8         &kp N9       &kp N0               &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &kp LEFT_ARROW      &kp DOWN       &kp UP       &kp RIGHT            &trans
&kp LSHFT   &trans        &kp HOME      &kp END       &kp INSERT    &kp DELETE      &kp CAPS  &kp LC(LEFT_ARROW)  &kp PAGE_DOWN  &kp PAGE_UP  &kp LC(RIGHT_ARROW)  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &mo 3               &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp LT                &kp KP_EQUAL  &kp DLLR               &kp GRAVE    &kp CARET  &kp LEFT_BRACE      &kp MINUS  &kp RIGHT_BRACE      &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &kp LEFT_PARENTHESIS  &kp MINUS     &kp RIGHT_PARENTHESIS  &kp PLUS     &kp MINUS  &kp LS(LEFT_BRACE)  &kp UNDER  &kp LS(RIGHT_BRACE)  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans                &trans        &trans                 &trans       &kp UNDER  &kp PLUS            &kp LBRC   &kp RBRC             &kp PIPE  &kp TILDE
                                           &kp LGUI      &trans                 &kp SPACE    &kp RET    &trans              &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans            &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_VOL_DN    &kp K_MUTE        &kp C_VOLUME_UP  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT       &trans  &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
